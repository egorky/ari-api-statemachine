{
  "id": "example_fsm",
  "initial": "idle",
  "externalApis": {
    "fetchUserData": {
      "url": "https://jsonplaceholder.typicode.com/users/{{payload.userId}}",
      "method": "GET",
      "timeout": 3000
    },
    "postData": {
        "url": "https://jsonplaceholder.typicode.com/posts",
        "method": "POST",
        "body": {
            "title": "FSM Data Post",
            "body": "Posted from {{fsm.id}} during {{fsm.state}} state.",
            "userId": "{{payload.userId}}"
        },
        "headers": {
            "Content-type": "application/json; charset=UTF-8"
        }
    }
  },
  "transitions": [
    { "name": "start", "from": "idle", "to": "running" },
    { "name": "process", "from": "running", "to": "processing" },
    { "name": "complete", "from": "processing", "to": "idle" },
    { "name": "fail", "from": "processing", "to": "error" },
    { "name": "reset", "from": "error", "to": "idle"}
  ],
  "methods": {
    "onBeforeStart": "function(lifecycle, eventPayload, fsm) { console.log(\"About to start example_fsm from state: \" + fsm.state + \". Payload: \", eventPayload); }",
    "onEnterRunning": "function(lifecycle, eventPayload, fsm) { console.log(\"Entered running state. Will auto-trigger process. Trace ID: \" + fsm.traceId); fsm.process({ detail: \"auto triggered from running\" }); }",
    "onProcess": "async function(lifecycle, eventPayload, fsm, makeExternalApiCall) {\n        console.log(\"Processing started. Event payload: \", eventPayload);\n        console.log(\"FSM traceId: \" + fsm.traceId);\n        try {\n            // Assume eventPayload for start might contain userId for this example\n            // Or it could be in fsm.initialData if passed at the very beginning\n            const userIdToFetch = (eventPayload && eventPayload.userId) || (fsm.initialData && fsm.initialData.userId) || 1;\n            const userData = await makeExternalApiCall(\"fetchUserData\", fsm, { userId: userIdToFetch });\n            console.log(\"User data fetched:\", userData.name, userData.email);\n            fsm.userData = userData; // Store fetched data on FSM instance\n\n            const postResult = await makeExternalApiCall(\"postData\", fsm, { userId: userIdToFetch });\n            console.log(\"Post data result:\", postResult);\n            fsm.postResult = postResult;\n\n            // Simulate some other async work\n            await new Promise(resolve => setTimeout(resolve, 500));\n            console.log(\"Processing finished, userData and postResult stored on FSM instance.\");\n            fsm.complete(); // Transition to next state\n        } catch (err) {\n            console.error(\"Error during processing transition:\", err.message);\n            fsm.apiError = err.message;\n            fsm.fail(); // Transition to error state\n        }\n    }",
    "onEnterProcessing": "function() { console.log(\"Entered processing state. Waiting for async tasks...\"); }",
    "onEnterIdle": "function(lifecycle, eventPayload, fsm) { console.log(\"Entered idle state. FSM User data:\", fsm.userData, \"Post result:\", fsm.postResult); fsm.userData = null; fsm.postResult = null; }",
    "onEnterError": "function(lifecycle, eventPayload, fsm) { console.error(\"Entered error state. Error: \" + fsm.apiError); }"
  }
}
