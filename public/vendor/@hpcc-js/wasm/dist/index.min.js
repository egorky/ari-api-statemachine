// Placeholder for @hpcc-js/wasm/dist/index.min.js
// In a real setup, this file would be copied from node_modules/@hpcc-js/wasm/dist/index.min.js
// after running: npm install @hpcc-js/wasm@0.3.11
console.log("@hpcc-js/wasm/dist/index.min.js placeholder loaded");

// Minimal self-initialization to mimic the library's structure if needed by d3-graphviz,
// or d3-graphviz might handle it if this script defines global HPCCWasm.
var HPCCWasm = (function() {
    var wasmFolder = "./"; // Default, will be overridden by d3-graphviz option
    return {
        config: {
            wasmFolder: function(folder) {
                if (folder) wasmFolder = folder;
                return wasmFolder;
            }
        },
        load: async function() {
            // This is a mock. The actual library fetches and compiles the WASM.
            console.log("Mock HPCCWasm.load() called. Attempting to fetch from:", wasmFolder + "graphvizlib.wasm");
            // In a real scenario, it would fetch and initialize the WASM.
            // We can't actually fetch and compile WASM here.
            return Promise.resolve({
                graphvizVersion: function() { return "mock-version"; },
                circo: function() { return ""; },
                dot: function() { return ""; },
                fdp: function() { return ""; },
                neato: function() { return ""; },
                osage: function() { return ""; },
                patchwork: function() { return ""; },
                twopi: function() { return ""; }
            });
        }
    };
})();
